@using DeliveryScheduleSolution.Models
@using DeliveryScheduleSolution.Services
@inject MemberService MemberService
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    string? username = HttpContextAccessor.HttpContext?.Session.GetString("Username");
    string? role = HttpContextAccessor.HttpContext?.Session.GetString("Role");
    ViewData["Title"] = "首頁";
}

<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - DeliverySchedule</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

    <style>
        body {
            overflow-x: hidden;            
        }

        /* Navbar 固定在上方 */
        .custom-navbar {
            background-color: #4169E1; /* 海軍藍 */
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1030;
            height: 56px;
        }

        /* 內容區包裝器，補上 Navbar 高度 */
        #main-container {
            display: flex;
            margin-top: 56px; /* Navbar 高度 */
            height: calc(100vh - 56px);
        }

        /* Sidebar */
        #sidebar-wrapper {
            width: 250px;
            background: #f8f9fa;
            overflow-y: auto;
            box-shadow: 3px 0 5px rgba(0,0,0,0.1);
            transition: margin 0.3s ease;
            height: 100%;
        }

            #sidebar-wrapper.collapsed {
                margin-left: -250px;
            }

        /* Sidebar 文字樣式 */
        .sidebar .nav-link {
            display: flex;
            align-items: center;
            justify-content: space-between;
            color: #555;
            transition: color 0.2s;
        }

            /* 滑鼠指到 → 淺黑色底 */
            .sidebar .nav-link:hover {
                background-color: #cfe2ff; /* 淺藍底 */
                color: #000;
            }

            /* 點擊選中（active） → 淺藍底 */
            .sidebar .nav-link.active {
                background-color: #cfe2ff; /* 淺藍底 */
                color: #000;
                font-weight: 600;
            }

            .sidebar .nav-link i {
                margin-right: 8px;
            }

            .sidebar .nav-link.text-muted {
                color: #666 !important;
            }

        .sidebar .btn-link.text-danger:hover {
            color: #b30000;
        }

        .arrow {
            transition: transform 0.2s ease;
        }

        .nav-link[aria-expanded="true"] .arrow {
            transform: rotate(90deg);
        }

        /* 右側主內容 */
        #page-content-wrapper {
            flex-grow: 1;
            padding: 20px;
            overflow-y: auto;
        }
    </style>
</head>
<body>
    <!-- Navbar 橫跨整頁 -->
    <nav id="navbar-top" class="navbar navbar-expand-lg custom-navbar">
        <div class="container-fluid">
            <button class="btn btn-outline-light ms-2" id="menu-toggle">☰</button>
            <span class="ms-auto text-white">Hi! @username </span>
            <a class="btn btn-outline-light ms-2" href="/Account/Logout">登出</a>
        </div>
    </nav>

    <!-- 主容器（Navbar 下方） -->
    <div id="main-container">
        <!-- Sidebar -->
        <div id="sidebar-wrapper" class="sidebar">
            @* <div class="sidebar-heading text-center py-3">
                <h5>功能選單</h5>
            </div> *@
            <ul class="nav flex-column" id="menuContainer"></ul>
        </div>

        <!-- Page content -->
        <div id="page-content-wrapper">
            <main>
                @RenderBody()
            </main>
        </div>
    </div>

    <!-- JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const sidebar = document.getElementById("sidebar-wrapper");
            const toggleBtn = document.getElementById("menu-toggle");

            toggleBtn.addEventListener("click", function () {
                sidebar.classList.toggle("collapsed");
            });

            // 載入 Menu，傳入角色參數
            const role = '@role';
            fetch(`/api/Menus?role=${encodeURIComponent(role)}`)
                .then(resp => resp.json())
                .then(menus => {
                    function renderMenus(items) {
                        let html = "";
                        items.forEach(item => {
                            if (item.children && item.children.length > 0) {
                                html += `
                <li class="nav-item">
                    <a class="nav-link d-flex align-items-center justify-content-between"
                       data-bs-toggle="collapse" href="#collapse-${item.id}" aria-expanded="false">
                        <span class="d-flex align-items-center">
                            <i class="bi ${item.icon} me-2"></i>
                            ${item.title}
                        </span>
                        <i class="bi bi-chevron-right arrow"></i>
                    </a>
                    <ul class="collapse list-unstyled ps-3" id="collapse-${item.id}">
                        ${renderMenus(item.children)}
                    </ul>
                </li>`;
                            } else {
                                html += `
                <li class="nav-item">
                    <a class="nav-link d-flex align-items-center justify-content-between" href="${item.url}">
                        <span class="d-flex align-items-center">
                            <i class="bi ${item.icon} me-2"></i>
                            ${item.title}
                        </span>
                        <i class="bi"></i>
                    </a>
                </li>`;
                            }
                        });
                        return html;
                    }
                    document.getElementById("menuContainer").innerHTML = renderMenus(menus);
                })
                .catch(err => {
                    console.error("載入選單錯誤：", err);
                    document.getElementById("menuContainer").innerHTML =
                        `<li class="nav-item"><span class="text-danger">載入選單失敗</span></li>`;
                });
        });
    </script>
</body>
</html>
